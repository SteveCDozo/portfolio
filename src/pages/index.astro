---
import "../styles/style.css";
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <meta name="generator" content={Astro.generator} />
    <title>Steve Cardozo</title>
  </head>
  <body>
    <header>
      <a href="/" class="logo">sc</a>
      <nav>
        <button
          class="mobile-nav-toggle"
          aria-expanded="false"
          aria-controls="nav-menu"
        >
        </button>
        <ul id="nav-menu">
          <li><a href="#about">about</a></li>
          <li><a href="#projects">projects</a></li>
          <li><a href="#contact">contact</a></li>
          <li><a href="#" target="_blank" class="resume-link">resume</a></li>
        </ul>
      </nav>
    </header>

    <main>
      <section id="hero">
        <div>
          <p>hi there! i'm</p>
          <h1>Steve Cardozo,</h1>
          <h2>
            a <b>front-end developer</b> who loves bringing ideas to life.
          </h2>
        </div>
        <!--<img src="/images/cat.png" />-->
      </section>
      <section id="about">about</section>
      <section id="projects">projects</section>
    </main>

    <script>
      import Headroom from "headroom.js";

      const header = document.querySelector("header");
      const navToggle = document.querySelector(".mobile-nav-toggle");
      const navMenu = document.querySelector("#nav-menu");

      function openNavMenu() {
        navToggle.setAttribute("aria-expanded", "true");
        navMenu.classList.add("is-active");
      }

      function closeNavMenu() {
        navToggle.setAttribute("aria-expanded", "false");
        navMenu.classList.remove("is-active");
      }

      function isNavMenuOpen() {
        return navMenu.classList.contains("is-active");
      }

      navToggle.addEventListener("click", () =>
        isNavMenuOpen() ? closeNavMenu() : openNavMenu()
      );

      // close the mobile nav menu when link is clicked
      navMenu.addEventListener("click", e => {
        if (!isNavMenuOpen() || e.target.tagName !== "A") return; // ensure menu open and link clicked

        closeNavMenu();
      });

      const options = { onUnpin: () => isNavMenuOpen() && closeNavMenu() };
      const headroom = new Headroom(header, options);
      headroom.init();
    </script>
  </body>
</html>